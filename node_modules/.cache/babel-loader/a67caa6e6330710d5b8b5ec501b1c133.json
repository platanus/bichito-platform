{"ast":null,"code":"import { toDisplayString as _toDisplayString, renderSlot as _renderSlot, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(\" I am a Vue Component \" + _toDisplayString($setup.props.test) + \" \" + _toDisplayString($setup.message) + \" \", 1\n  /* TEXT */\n  ), _renderSlot(_ctx.$slots, \"default\")]);\n}","map":{"version":3,"mappings":";;uBAsBEA,oBAGM,KAHN,EAGM,IAHN,EAGM,kBAHD,2BACkBC,iBAAGC,aAAMC,IAAT,CADlB,GACkC,GADlC,GACmCF,iBAAGC,cAAH,CADnC,GACgD,KACnD;AAAA;GACI,EADJE,YAAQC,WAAR,EAAQ,SAAR,CACI,CAHN","names":["_createElementBlock","_toDisplayString","$setup","test","_renderSlot","_ctx"],"sourceRoot":"","sources":["/Users/tamaralues/Desktop/bichito-platform/app/javascript/components/admin-component.vue"],"sourcesContent":["<script setup lang=\"ts\">\ninterface Props {\n  test?: string\n  testNumber?: number\n  testObject?: {[key: string]: string},\n  testList?: number[],\n}\n\nconst props = withDefaults(\n  defineProps<Props>(),\n  {\n    test: undefined,\n    testNumber: 0,\n    testObject: undefined,\n    testList: undefined,\n  },\n);\n\nconst message = 'Hello World';\n</script>\n\n<template>\n  <div>\n    I am a Vue Component {{ props.test }} {{ message }}\n    <slot />\n  </div>\n</template>\n"]},"metadata":{},"sourceType":"module"}